description: >
  Run tests and optionally measure and upload the coverage to the coveralls.io.

parameters:
  testsuite:
    type: string
    default: ""
    description: "The name of python module which shoudl execute all the tests, if left empty <package_name>.tests.all is used"
  coverage:
    type: boolean
    default: true
    description: "If false the coverage is not measured uploaded"


steps:
  - run:
      name: Init variables
      command: |
        export PACKAGE_NAME=${CIRCLE_PROJECT_REPONAME}
        if [ "<<parameters.testsuite>>" != "" ]; then
           TEST_SUITE_PATH="<<parameters.testsuite>>";
        elif [ -f "tests/all.py" ]; then
           TEST_SUITE_PATH="tests.all";
        elif [ `python -c "import $PACKAGE_NAME.tests.all"` ]; then
           TEST_SUITE_PATH="$PACKAGE_NAME.tests.all";
        else
           echo "Testsuite was not specified and can not find it automatically (PACKAGE_NAME=$PACKAGE_NAME)" && false
        fi;
        echo export TEST_SUITE_PATH="$TEST_SUITE_PATH" >> "$BASH_ENV"
        echo export PACKAGE_NAME="$PACKAGE_NAME" >> "$BASH_ENV"

  - when:
      condition: << parameters.coverage >>
      steps:
        - run: pip install coverage coveralls xmlrunner --user
        - run:
            name: Run test and collect coverage
            command: |
              MODULE_NAME=`echo $PACKAGE_NAME | sed -r 's/-/_/g'`
              coverage run --source=$MODULE_NAME -m $TEST_SUITE_PATH --with-xunit
        - run:
            name: Convert paths of installed package to paths in git in coverage reports
            command: |
              PYTHON_VERSION=$(python -c "import sys;v = sys.version_info;print('%d.%d.%d' % (v[0], v[1], v[2]))")
              PYTHON_VERSION_SHORT=$(python -c "import sys;v = sys.version_info;print('%d.%d' % (v[0], v[1]))")
              DIST_PACKAGES=$HOME/.local/lib/python$PYTHON_VERSION_SHORT/site-packages
              INSTALL_PATH=`ls $DIST_PACKAGES/$PACKAGE_NAME-*`
              echo "PYTHON_VERSION=$PYTHON_VERSION"
              echo "PYTHON_VERSION_SHORT=$PYTHON_VERSION_SHORT"
              echo "DIST_PACKAGES=$DIST_PACKAGES INSTALL_PATH=$INSTALL_PATH"
              echo -e "\
              import sqlite3                                                              \n\
              ORIG_PREFIX = '$INSTALL_PATH'                                               \n\
              NEW_PREFIX = '$CWD'                                                         \n\
              connection = sqlite3.connect('.coverage')                                   \n\
              cursor = connection.cursor()                                                \n\
              cursor.execute('select * from file')                                        \n\
              file_list = cursor.fetchall()                                               \n\
              for id_, path in file_list:                                                 \n\
                  new_path = path.replace(ORIG_PREFIX, NEW_PREFIX)                        \n\
                  print(id_, path, '->', new_path)                                        \n\
                  cursor.execute('update file set path = ? where id = ?', (new_path, id_))\n\
              connection.close()\n" | python
        - run:
            name: Upload coverage to coveralls.io
            command: coveralls

  - unless:
      condition: << parameters.coverage >>
      steps:
        - run: python -m $TEST_SUITE_PATH --with-xunit

  - store_test_results:
      path: test-reports
