description: >
  Run tests and optionally measure and upload the coverage to the coveralls.io.
  Expects MODULE_NAME, PACKAGE_NAME variables to be set.

parameters:
  testsuite:
    type: string
    default: ""
    description: "The name of python module which shoudl execute all the tests, if left empty <package_name>.tests.all is used"
  coverage:
    type: boolean
    default: true
    description: "If false the coverage is not measured uploaded"


steps:
  - run:
      name: Init variables
      command: |
        export PACKAGE_NAME=${CIRCLE_PROJECT_REPONAME}
        if [ "<<parameters.testsuite>>" != "" ]; then
           TEST_SUITE_PATH="<<parameters.testsuite>>";
        elif [ -f "tests/all.py" ]; then
           TEST_SUITE_PATH="tests.all";
        elif `python -c "import $PACKAGE_NAME.tests.all"`; then
           TEST_SUITE_PATH="$PACKAGE_NAME.tests.all";
        else
           echo "Testsuite was not specified and can not find it automatically (PACKAGE_NAME=$PACKAGE_NAME)" && false
        fi;
        echo export TEST_SUITE_PATH="$TEST_SUITE_PATH" >> "$BASH_ENV"
  - when:
      condition: << parameters.coverage >>
      steps:
        - run: pip install coverage coveralls --user
        - run:
            name: Run test and collect coverage
            command: |
              coverage run -m $TEST_SUITE_PATH
        - run:
            command: |
               if [ -d "removed_because_of_coverage_$MODULE_NAME" ]; then
                  mv "removed_because_of_coverage_$MODULE_NAME" $MODULE_NAME;
               fi
        - run:
            name: Convert paths of installed package to paths in git in coverage reports
            command: |
              PYTHON_VERSION=$(python -c "import sys;v = sys.version_info;print('%d.%d.%d' % (v[0], v[1], v[2]))")
              PYTHON_VERSION_SHORT=$(python -c "import sys;v = sys.version_info;print('%d.%d' % (v[0], v[1]))")
              DIST_PACKAGES=$HOME/.local/lib/python$PYTHON_VERSION_SHORT/site-packages
              # egg with zip_safe=True, there actually tree files/folders
              # package package-0.1-py3.9.egg package-0.5.dist-info
              INSTALL_PATH_EGG=`realpath $DIST_PACKAGES/$MODULE_NAME-*.egg`;
              INSTALL_PATH=`realpath $DIST_PACKAGES/$MODULE_NAME-*`;
              echo "PYTHON_VERSION=$PYTHON_VERSION"
              echo "PYTHON_VERSION_SHORT=$PYTHON_VERSION_SHORT"
              echo "DIST_PACKAGES=$DIST_PACKAGES"
              echo "INSTALL_PATH=$INSTALL_PATH"
              echo "INSTALL_PATH_EGG=$INSTALL_PATH_EGG"
              echo -e "\
              import sqlite3                                                              \n\
              ORIG_PREFIX = ['$INSTALL_PATH/', '$INSTALL_PATH_EGG/']                      \n\
              NEW_PREFIX = ''                                                             \n\
              connection = sqlite3.connect('.coverage')                                   \n\
              cursor = connection.cursor()                                                \n\
              cursor.execute('select * from file')                                        \n\
              file_list = cursor.fetchall()                                               \n\
              for id_, path in file_list:                                                 \n\
                  new_path = path                                                         \n\
                  for op in ORIG_PREFIX:                                                  \n\
                      new_path = new_path.replace(op, NEW_PREFIX)                         \n\
                  print(id_, path, '->', new_path)                                        \n\
                  cursor.execute('update file set path = ? where id = ?', (new_path, id_))\n\
              connection.close()\n" | python

        - run:
            name: Upload coverage to coveralls.io
            command: coveralls
        #- run:
        #    name: Upload coverage to codecov.io
        #    command: codecov

  - unless:
      condition: << parameters.coverage >>
      steps:
        - run: python -m $TEST_SUITE_PATH
